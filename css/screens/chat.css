#chat-screen {
  background-color: #abc1d1;
  height: 11000vh;
}

#chat-screen .alt-header {
  background-color: #abc1d1;
  top: 0;
  position: fixed;
  z-index: 1;
}
/* position을 fixed로 해놓고 top 값을 0을 주면 맨 위로 붙는다. 이 때 붙는 값은 당연히 margin과 padding을 포함한 넓이이다.*/

#chat-screen .status-bar {
  z-index: 2;
}

/* 위에 status-bar와 alt-header 모두 fixed인데 자연스럽게 겹치게 하고 싶다. 
이 때 우선 alt-header에 background-color를 주면, alt-header와 status-bar 겹치는 공간에 alt-header가 먼저 나오게 된다.
그래서 position fixed인 값들의 순서를 정하기 위해 z-index를 사용하며, z-index 숫자가 높은 class가 먼저 나온다.
위에선, status-bar에 z-index를 2를 줘서 (원래 z-index 값 디폴트는 0이다) status-bar가 먼저 나오게 하고,
자연스럽게 그 뒤에 alt-header가 뒤에 나오게 된다. */

.main-chat {
  margin-top: 120px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.chat__timestamp {
  color: white;
  background-color: #92a4b2;
  padding: 15px;
  border-radius: 25px;
  font-size: 14px;
  margin-bottom: 25px;
}

.message-row {
  width: 100%;
  display: flex;
  margin-bottom: 25px;
}

.message-row img {
  width: 50px;
  height: 50px;
  border-radius: 20%;
  margin-right: 10px;
}

.message__author {
  margin-bottom: 5px;
  display: block;
}

.message__bubble {
  background-color: white;
  padding: 13px;
  font-size: 18px;
  border-radius: 15px;
  border-top-left-radius: 0px;
  margin-right: 5px;
}
.message__info {
  display: flex;
  align-items: flex-end;
}

.message__author,
.message__time {
  opacity: 0.8;
  font-size: 14px;
}

.message-row--own {
  justify-content: flex-end;
}

.message-row--own .message__bubble {
  background-color: var(--yellow);
  border-top-left-radius: 15px;
  border-top-right-radius: 0px;
  margin-left: 5px;
  margin-right: 0px;
}

/* .message-row--own .message__bubble {
  margin-left: 5px;
  order: 1;
} */

/* flex 자식들 순서 바꾸기 1 

flex의 children들은 order라는 속성을 사용할 수 있다. 말 그대로 자식들의 순서를 정할 수 있는데, 
디폴트 값은 0이고, 만약 한 자식에게 0을 초과하는 값의 order를 주면 그 자식은 순서가 밀린다. 
위에서는 message__bubble의 순서를 1로 해서 자식 순서가 뒤로 밀렸고, 
현재 왼->오 정렬이기 때문에 오른쪽으로 순서가 밀렸다.*/

.message-row--own .message__info {
  flex-direction: row-reverse;
}

/*flex 자식들 순서 바꾸기 2

두번째로는 flex-direction을 row-reverse로 하면 된다. 이게 더 깔끔하다. 
row-reverse는 말 그대로 row 순서를 역으로 하는 방향이다 라는 뜻이다.
즉, 왼->오에서 오->왼 으로 순서를 정한다 라는 뜻이다*/

.reply {
  position: fixed;
  bottom: 0px;
  width: 100%;
  background-color: white;
  display: flex;
  padding: 5px 25px;
  justify-content: space-between;
  box-sizing: border-box;
  align-items: center;
}

.reply .reply__column:first-child {
  width: 10%;
}

.reply .reply__column:last-child {
  width: 90%;
  position: relative;
}

.reply input {
  padding: 14px;
  width: 100%;
  border: var(--main-border);
  border-radius: 25px;
  box-sizing: border-box;
}

.reply__column:last-child > i,
.reply__column:last-child button {
  position: absolute;
  right: 3px;
  top: 3px;
}

.reply__column:last-child > i {
  right: 50px;
  top: 22px;
}

.reply i {
  opacity: 0.5;
}

.reply__column button {
  background-color: var(--yellow);
  border: none;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.reply__column button i {
  opacity: 1;
}

.reply__column button:focus,
.reply__column button:active {
  outline: none;
}
